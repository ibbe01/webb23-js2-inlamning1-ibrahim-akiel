{"mappings":"AAAA,eAAe;IACX,MAAM,MAAM;IAEZ,MAAM,WAAW,MAAM,MAAM;IAE7B,MAAM,SAAS,SAAS;IAExB,QAAQ,IAAI;IACZ,OAAO;AACX;AAEA,MAAM,OAAO,SAAS,cAAc;AAEpC,KAAK,iBAAiB,UAAU,OAAO;IACnC,MAAM;IAEN,MAAM,eAAe,SAAS,cAAc;IAC5C,MAAM,gBAAgB,SAAS,cAAc;IAC7C,MAAM,iBAAiB,SAAS,eAAe;IAE/C,MAAM,aAAa,SAAS,cAAc,SAAS;IACnD,MAAM,cAAc;IAGpB,MAAM,MAAM;IAEZ,IAAG,CAAC,WAAW,QAAQ;QACnB,MAAM;QACN;IACJ;IAGA,MAAM,WAAW,MAAM,MAAM,KAAK;QAC9B,QAAQ;QACR,SAAS;YACL,gBAAgB;QACpB;QACA,MAAM,KAAK,UAAU;YAAC,MAAM;YAAY,OAAO;QAAW;IAE9D,GACK,KAAK,CAAA,WAAY,SAAS,QAC1B,KAAK,CAAA;QACF,YAAY,KAAK,MAAM,KAAK;QAC5B,QAAQ,IAAI;IAChB;IAEC,IAAI,iBAAiB;QAAC;QAAQ;QAAO;KAAO;IAC5C,IAAI;IACJ,IAAI;IAEJ,MAAM,UAAU,SAAS,iBAAiB;IAC1C,QAAQ,QAAQ,CAAA,SAAU,OAAO,MAAM,UAAU;IAEjD,QAAQ,QAAQ,CAAA;QACb,OAAO,iBAAiB,SAAS,CAAC;YAC9B,EAAE;YACF,kCAAkC;YACrC,cAAc,KAAK,MAAM,KAAK,WAAU,eAAe;YACrD,OAAO,cAAc,CAAC,YAAY;YACpC,eAAe,cAAc,sBAAqB;YAClD,IAAI,SAAS,WAAW,MAAM,OAAO;QAItC;IACH;IAID,MAAM,gBAAgB,SAAS,eAAe;IAC9C,cAAc,QAAQ;IACtB,cAAc,MAAM,SAAS;IAC7B,cAAc,MAAM,QAAQ;IAK5B,eAAe,MAAM,UAAU;IAG/B,aAAa,MAAM,UAAU;IAC7B,cAAc,MAAM,UAAU;AAGtC;AAEA,SAAS,YAAY,UAAU,EAAE,WAAW;IACxC,MAAM,oBAAoB,SAAS,eAAe;IAClD,kBAAkB,YAAY,CAAC,MAAM,EAAE,WAAW,QAAQ,EAAE,YAAY,CAAC;AAC7E;AAGA,eAAe,WAAW,MAAM,EAAE,UAAU,EAAE,WAAW;IAGrD,IAAG,WAAW,GACV;IAGJ,IAAG,WAAW,GAAG;QACb,sBAAsB;QACtB,MAAM,YAAY;QAElB,MAAM,iBAAiB,MAAM,MAAM,WAAW;YAC1C,QAAQ;YACR,SAAS;gBACL,gBAAgB;YACpB;YACA,MAAM,KAAK,UAAU;gBAAC,MAAM;gBAAY,OAAO;YAAW;QAC9D;QAEA,MAAM,aAAa,MAAM,eAAe;QACxC,QAAQ,IAAI;IAChB;IACG;AAGP;AAEA,SAAS,WAAW,IAAI,EAAE,MAAM;IAC5B,IAAG,SAAS,QACR,OAAO;SAEN,IAAG,SAAS,UAAU,WAAW,OAClC,OAAO;SAEN,IAAG,SAAS,SAAS,WAAW,QACjC,OAAO;SAEN,IAAG,SAAS,aAAU,WAAW,OAClC,OAAO;SAEN,IAAG,SAAS,SAAS,WAAW,WACjC,OAAO;SAEN,IAAG,SAAS,UAAU,WAAW,WAClC,OAAO;SAEN,IAAG,SAAS,aAAU,WAAW,QAClC,OAAO;AAEf;AAEA,SAAS,mBAET","sources":["src/main.js"],"sourcesContent":["async function getPlayer() {\r\n    const url = \"http://localhost:3000/player\";\r\n    \r\n    const response = await fetch(url);\r\n\r\n    const player = response.json();\r\n\r\n    console.log(player)\r\n    return player;\r\n}\r\n\r\nconst form = document.querySelector('form');\r\n\r\nform.addEventListener('submit', async (event)=>{\r\n    event.preventDefault();\r\n\r\n    const inputElement = document.querySelector('input');\r\n    const buttonElement = document.querySelector('button');\r\n    const computerResult = document.getElementById('computerResult');\r\n\r\n    const playerName = document.querySelector('input').value\r\n    const playerScore = 0;\r\n\r\n\r\n    const url = \"http://localhost:3000/player\";\r\n\r\n    if(!playerName.trim()) {\r\n        alert(\"Give us name pls xD\")\r\n        return;\r\n    }\r\n\r\n   \r\n    const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({name: playerName, score: playerScore}) \r\n        \r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            gameDisplay(data.name, data.score);\r\n            console.log(data);\r\n        })\r\n\r\n         let computerChoice = [\"sten\", \"sax\", \"påse\"];\r\n         let randomIndex;\r\n         let pick;\r\n\r\n         const buttons = document.querySelectorAll('button[id]');\r\n         buttons.forEach(button => button.style.display = 'inline-block');\r\n\r\n         buttons.forEach(button => {\r\n            button.addEventListener('click', (e)=>{\r\n                e.preventDefault();\r\n                // console.log(\"clicked a button\")\r\n             randomIndex = Math.floor(Math.random()* computerChoice.length);\r\n               pick = computerChoice[randomIndex];\r\n             computerResult.textContent = \"Computer Result: \"+ pick;\r\n             let result = calcResult(pick, button.id);\r\n\r\n\r\n                \r\n            })  \r\n         })\r\n\r\n\r\n\r\n        const highscoreList = document.getElementById('highscoreList');\r\n        highscoreList.style = \"border: 2px solid black\";\r\n        highscoreList.style.height = \"350px\";\r\n        highscoreList.style.width = \"150px\";\r\n        \r\n        \r\n        \r\n      \r\n        computerResult.style.display = \"inline-block\";\r\n        \r\n        \r\n        inputElement.style.display = 'none';\r\n        buttonElement.style.display = 'none';\r\n        \r\n        \r\n})\r\n\r\nfunction gameDisplay(playerName, playerScore) {\r\n    const playerInfoElement = document.getElementById('playerInfo');\r\n    playerInfoElement.innerHTML = `Name: ${playerName}, score ${playerScore}`;\r\n}\r\n\r\n\r\nasync function scoreStore(result, playerName, playerScore) {\r\n\r\n\r\n    if(result === 0) {\r\n        return;\r\n    }   \r\n\r\n    if(result === 1) {\r\n        // Uppdatera databasen\r\n        const updateUrl = \"http://localhost:3000/player/update\"; \r\n\r\n        const updateResponse = await fetch(updateUrl, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({name: playerName, score: playerScore}) \r\n        });\r\n    \r\n        const updateData = await updateResponse.json();\r\n        console.log(updateData);\r\n    }\r\n    if(result === -1) {\r\n        // Börja om / visa highscore \r\n    }\r\n}\r\n\r\nfunction calcResult(pick, choice) {\r\n    if(pick === choice) {\r\n        return 0;\r\n    } \r\n    else if(pick === \"sten\" && choice === \"sax\") {\r\n        return -1;\r\n    }\r\n    else if(pick === \"sax\" && choice === \"sten\") {\r\n        return 1;\r\n    }\r\n    else if(pick === \"påse\" && choice === \"sax\") {\r\n        return 1;\r\n    }\r\n    else if(pick === \"sax\" && choice === \"påse\") {\r\n        return -1;\r\n    }\r\n    else if(pick === \"sten\" && choice === \"påse\") {\r\n        return 1;\r\n    }\r\n    else if(pick === \"påse\" && choice === \"sten\") {\r\n        return -1;\r\n    }\r\n}\r\n\r\nfunction databaseAnalyst() {\r\n\r\n}\r\n\r\n\r\n"],"names":[],"version":3,"file":"index.de158e3a.js.map","sourceRoot":"/__parcel_source_root/"}